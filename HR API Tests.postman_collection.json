{
	"info": {
		"_postman_id": "48b86508-ca30-4b94-b88c-ab01d8b855b3",
		"name": "HR API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44931625"
	},
	"item": [
		{
			"name": "Consultar empeados por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código 200 - Lista de usuarios\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data.length).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/employees/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear empleado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"id\", jsonData.id);\r",
							"pm.test(`usuario \"${jsonData.name}\" creado correctamente con id \"${jsonData.id}\"`, () => {\r",
							"    pm.response.to.have.status(201);\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data).to.have.property(\"id\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Abigail Robles\",\r\n    \"role\": \"Compañerita\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/employees/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Validar que se creó el empleado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(`Usuario \"${jsonData.name}\" con id \"${jsonData.id}\" si existe`, () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data).to.have.property(\"id\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/employees/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"employees",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar empleado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(`Usuario \"${jsonData.name}\" con id \"${jsonData.id}\" actualizó su rol correctamente a \"${jsonData.role}\".`, () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data).to.have.property(\"id\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"role\": \"empleada de bancoppel\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/employees/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"employees",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validar que se actualizó el empleado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(`Usuario \"${jsonData.name}\" con id \"${jsonData.id}\" actualizó su rol a \"${jsonData.role}\"`, () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data).to.have.property(\"id\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/employees/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"employees",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar empleados",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(`Usuario \"${jsonData.id}\" eliminado con exito`, () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/employees/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"employees",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validar que ya no existe el empleado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(`${jsonData.message}`, () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/employees/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"employees",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "EmployeeId",
			"value": ""
		}
	]
}